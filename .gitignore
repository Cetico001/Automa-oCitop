from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
import win32com.client
import os
from datetime import datetime
from collections import OrderedDict
import time

#PARTE1--------------------------------------------------------------------------------------------------------------------------

Excel = win32com.client.Dispatch("Excel.Application")
Workbook = Excel.ActiveWorkbook
Worksheet = Workbook.Worksheets[3]
data_i = Worksheet.Range("AR2").Value
data_i = str(data_i)
data_i = data_i.split(' ')[0]
periodo1 = data_i[8:10] + '-' + data_i[5:7] + '-' + data_i[:4]
data_i = data_i[8:10] + '/' + data_i[5:7] + '/' + data_i[:4]

used = Worksheet.UsedRange
valorf = int(used.Row + used.Rows.Count - 1)
data_f = Worksheet.Range("AR" + str(valorf)).Value
data_f = str(data_f)
data_f = data_f.split(' ')[0]
periodo2 = data_f[8:10] + '-' + data_f[5:7] + '-' + data_f[:4]
data_f = data_f[8:10] + '/' + data_f[5:7] + '/' + data_f[:4]

periodo=periodo1+' '+periodo2
periodo=str(periodo)
vet = list(range(valorf))

y=0
for x in range(2, valorf):
    verificar = Worksheet.Range("BB" + str(x)).Value
    verificar2 = Worksheet.Range("AX" + str(x)).Value
    if verificar=='Viagem realizada com km abaixo do limite de 90% da extensão referencial (Art. 61, inciso IV do Decreto 18.370 de 7 de julho de 2023; Art. 7º da Portaria Nº 024/2023)' and verificar2=='':
        vet[y]=str(Worksheet.Range("K" + str(x)).Value)
        vet[y]=vet[y].split('.')[0]
        y=y+1
        
lista_sem_repeticao = list(OrderedDict.fromkeys(vet))

total=0

for x in range(0, y-1):
    teste=0
    
    for z in range(0, y-1):
        if lista_sem_repeticao[x]==vet[z] and teste==0:
            teste=1
            
    if teste==0:
        lista_sem_repeticao[x]=''
    else:
        total=total+1
        
#PARTE1--------------------------------------------------------------------------------------------------------------------------

#PARTE2--------------------------------------------------------------------------------------------------------------------------

x=0

options = webdriver.ChromeOptions()
options.add_experimental_option('prefs', {
"download.default_directory": "C:\\Caminho",
"download.prompt_for_download": False,
"download.directory_upgrade": True,
"plugins.always_open_pdf_externally": True
})
driver = webdriver.Chrome(options=options)

wait = WebDriverWait(driver, 10)

driver.get(r'https://site')

conta = driver.find_element('xpath', '/html/body/table/tbody/tr/td/form/div[2]/table/tbody/tr[2]/td[2]/table/tbody/tr[1]/td[2]/input')
conta.send_keys('login-site')
senha = driver.find_element('xpath', '/html/body/table/tbody/tr/td/form/div[2]/table/tbody/tr[2]/td[2]/table/tbody/tr[2]/td[2]/input')
senha.send_keys('senha-site')
confirmar = driver.find_element('xpath', '/html/body/table/tbody/tr/td/form/div[2]/table/tbody/tr[3]/td[2]/input')
confirmar.click()

driver.get(r'https://citop.transfacil.com.br/ecitop/relopemapadecontroleoperacional.do?evento=x')

operadora = driver.find_element('xpath', '//*[@id="AJAX"]//table[2]/tbody/tr[2]/td/a[1]/span')
operadora.click()

nova_janela = WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))

janelas = driver.window_handles

driver.switch_to.window(janelas[1])

driver.maximize_window()
operadorap = driver.find_element('xpath', '//*[@id="id_Arg"]')
operadorap.send_keys('087')
operadorap.send_keys(Keys.ENTER)

confirmar = wait.until(EC.presence_of_element_located(('xpath', '//*[@id="AJAX"]/ajax/form/table[7]/tbody/tr[2]/td[2]/a')))
confirmar.click()

driver.switch_to.window(janelas[0])
manual = wait.until(EC.presence_of_element_located(('xpath', '/html/body/table[3]/tbody/tr[2]/td[1]/input')))
manual.click()

dat = driver.execute_script('return document.querySelector("#AJAX input[name=\'dataInicio_Arg\']")')
driver.execute_script("arguments[0].value = '';", dat)
dat.send_keys(data_i)

datf = driver.execute_script('return document.querySelector("#AJAX input[name=\'dataFim_Arg\']")')
driver.execute_script("arguments[0].value = '';", datf)
datf.send_keys(data_f)

for x in range(0, total):

    veiculo = wait.until(EC.presence_of_element_located(('xpath', '//*[@id="veiculo"]/a[1]/span')))
    veiculo.click()
    
    driver.switch_to.window(driver.window_handles[1])

    driver.maximize_window()
    veiculo2 = driver.find_element('xpath', '//*[@id="codExterno_Arg"]')
    veiculo2.send_keys(lista_sem_repeticao[x])
    veiculo2.send_keys(Keys.ENTER)

    time.sleep(1)
    confirmar = wait.until(EC.presence_of_element_located(('xpath', '//*[@id="AJAX"]/ajax/form/table[7]/tbody/tr[2]/td[1]/a')))
    confirmar.click()

    time.sleep(2)
    driver.switch_to.window(driver.window_handles[0])
    gerar_relatorio = wait.until(EC.presence_of_element_located(('xpath', '//*[@id="botao_menu"]')))
    gerar_relatorio.click()
    
    time.sleep(3)
    driver.switch_to.window(driver.window_handles[1])
    driver.close()
    driver.switch_to.window(driver.window_handles[0])
    
#PARTE2--------------------------------------------------------------------------------------------------------------------------

#PARTE3--------------------------------------------------------------------------------------------------------------------------

diretorio = "C:\\Caminho"  

for nome_arquivo in os.listdir(diretorio):
    if nome_arquivo.endswith(").pdf"):
        novo=nome_arquivo.split('(')
        novo=novo[1].split(')')
        novo=novo[0]
        novo=int(novo)
        print(novo)
        print(periodo)
        caminho_original = os.path.join(diretorio, nome_arquivo)
        novo_nome_arquivo = f"exploderelatorio {periodo} {lista_sem_repeticao[novo]}.pdf"
        caminho_destino = os.path.join(diretorio, novo_nome_arquivo)
    else:
        caminho_original = os.path.join(diretorio, nome_arquivo)
        novo_nome_arquivo = f"exploderelatorio {periodo} {lista_sem_repeticao[0]}.pdf"
        caminho_destino = os.path.join(diretorio, novo_nome_arquivo)
    os.rename(caminho_original, caminho_destino)
print("Renomeação concluída.")

#PARTE3--------------------------------------------------------------------------------------------------------------------------
